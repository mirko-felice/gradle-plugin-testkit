name: CI + CD

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - '.github/renovate.json'
      - 'licenses/**'
  pull_request:

jobs:
  CI:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.6
      - name: Setup JDK
        uses: actions/setup-java@v3.11.0
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Setup Gradle and Build
        uses: gradle/gradle-build-action@v2.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          arguments: build
      - name: Upload Coverage
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./tests/build/reports/jacoco/testCodeCoverageReport/testCodeCoverageReport.xml
      - name: Analyze Sonar
        if: matrix.os == 'ubuntu-latest'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew clean sonar
  CD:
    if: github.ref_name == 'master'
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5.3.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Publish Release To Github
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_COMMITTER_NAME: Mirko Felice
          GIT_COMMITTER_EMAIL: mirko.felice@studio.unibo.it
          GIT_AUTHOR_NAME: Mirko Felice
          GIT_AUTHOR_EMAIL: mirko.felice@studio.unibo.it
        run: |
          npm install
          npx semantic-release
      - name: Publish Release To Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_mavenUsername: ${{ secrets.MAVEN_USERNAME }}
          ORG_GRADLE_PROJECT_mavenPassword: ${{ secrets.MAVEN_PASSWORD }}
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
        run: ./gradlew publish publishPlugins --no-parallel
